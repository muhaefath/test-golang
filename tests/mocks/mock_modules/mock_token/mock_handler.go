// Code generated by MockGen. DO NOT EDIT.
// Source: modules/token/handler.go

// Package mock_token is a generated GoMock package.
package mock_token

import (
	context "context"
	reflect "reflect"
	token "tiktok-connector/modules/token"

	gomock "github.com/golang/mock/gomock"
	models "phabricator.sirclo.com/source/Hercules.git/models"
)

// MockHandler is a mock of Handler interface.
type MockHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerMockRecorder
}

// MockHandlerMockRecorder is the mock recorder for MockHandler.
type MockHandlerMockRecorder struct {
	mock *MockHandler
}

// NewMockHandler creates a new mock instance.
func NewMockHandler(ctrl *gomock.Controller) *MockHandler {
	mock := &MockHandler{ctrl: ctrl}
	mock.recorder = &MockHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandler) EXPECT() *MockHandlerMockRecorder {
	return m.recorder
}

// RefreshAccessToken mocks base method.
func (m *MockHandler) RefreshAccessToken(ctx context.Context, credential models.Credentials) (*models.Credentials, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshAccessToken", ctx, credential)
	ret0, _ := ret[0].(*models.Credentials)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RefreshAccessToken indicates an expected call of RefreshAccessToken.
func (mr *MockHandlerMockRecorder) RefreshAccessToken(ctx, credential interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshAccessToken", reflect.TypeOf((*MockHandler)(nil).RefreshAccessToken), ctx, credential)
}

// RequestAccessToken mocks base method.
func (m *MockHandler) RequestAccessToken(ctx context.Context, code string) (*token.GetAccessTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestAccessToken", ctx, code)
	ret0, _ := ret[0].(*token.GetAccessTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestAccessToken indicates an expected call of RequestAccessToken.
func (mr *MockHandlerMockRecorder) RequestAccessToken(ctx, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestAccessToken", reflect.TypeOf((*MockHandler)(nil).RequestAccessToken), ctx, code)
}
